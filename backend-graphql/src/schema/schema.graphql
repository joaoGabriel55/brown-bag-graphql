type Team {
  id: ID!
  name: String!
  foundation: Int!
  logoUrl: String!
  players: [Player]
}

type Player {
  id: ID!
  name: String!
  age: Int!
  photoUrl: String!
  position: String!
  team: Team!
}

type TeamOutput {
  id: ID!
  name: String!
  foundation: Int!
  logoUrl: String!
  players: [PlayerOutput!]!
}

type PlayerOutput {
  id: ID!
  name: String!
  age: Int!
  photoUrl: String!
  position: String!
}

input PlayerInput {
  name: String!
  age: Int!
  photoUrl: String!
  position: String!
}

type Query {
  findAllTeams: [TeamOutput!]!
  findTeamPlayers(teamId: String!): [PlayerOutput!]!
}

type Mutation {
  storeTeam(name: String!, foundation: Int!, logoUrl: String!): TeamOutput!
  storeTeamPlayers(teamId: String!, players: [PlayerInput!]!): [Player!]!
}

type Subscription {
  teamAdded: TeamOutput
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
